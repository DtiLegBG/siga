
package br.gov.rj.rio.iplanrio.maverick.integration.sicop.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * Processos do SICOP - telas IncluiProcesso (2010), TramitaProcesso (2050), ApensaProcesso (2060), DespachoComplementar (2210), ConsultaProcesso (3010), ConsultaTodaTramitaçãoProcesso (3110), CadastroDeDocumentos (2080), ConsultaTodaTramitaçãoDocumentos (3160), TramitaçãoDocumentos (2090), ConsultaProcessoPrincipalouApenso (3030), VinculaçãoInscriçãoImobPorProcesso (2140), ConsultaDocumentos (3150) e TramitaçãoInternaProcesso (2220) 
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "WSSicopGrava", targetNamespace = "http://pcrj/Sma/Sicop/Grava", wsdlLocation = "")
public class WSSicopGrava   extends Service {
 
	public WSSicopGrava(String urlSicop) {

		super(getURLSicop(urlSicop), new QName("http://pcrj/Sma/Sicop/Grava",	"WSSicopGrava"));
	}
    
    private static URL getURLSicop(String urlSICOP) {
    	  
		URL url = null;
		Logger logger = Logger.getLogger(br.gov.rj.rio.iplanrio.maverick.integration.sicop.webservice.WSSicopGrava.class.getName());

		try {

			URL baseUrl = br.gov.rj.rio.iplanrio.maverick.integration.sicop.webservice.WSSicopGrava.class.getResource(".");
			url = new URL(baseUrl, urlSICOP);
			
		} catch (MalformedURLException e) {
			
			logger.warning("Failed to create URL for the wsdl Location: "+ urlSICOP + "', retrying as a local file");
			logger.warning(e.getMessage());
		}
		
		return url;

    }

    /**
     * 
     * @return
     *     returns WSSicopGravaSoap
     */
    @WebEndpoint(name = "WSSicopGravaSoap")
    public WSSicopGravaSoap getWSSicopGravaSoap() {
        return super.getPort(new QName("http://pcrj/Sma/Sicop/Grava", "WSSicopGravaSoap"), WSSicopGravaSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSSicopGravaSoap
     */
    @WebEndpoint(name = "WSSicopGravaSoap")
    public WSSicopGravaSoap getWSSicopGravaSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://pcrj/Sma/Sicop/Grava", "WSSicopGravaSoap"), WSSicopGravaSoap.class, features);
    }

}
